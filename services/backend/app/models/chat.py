from app.db.base_class import Base, BaseMixin
from sqlalchemy.orm import Mapped, mapped_column, relationship
from sqlalchemy import Column, Integer, String, TIMESTAMP, Boolean, text, JSON, ForeignKey, Uuid


class Chat(Base, BaseMixin):
    # __tablename__ generated by Base

    chat_room_id: Mapped[Uuid] = mapped_column(ForeignKey("chatroom.id"))
    inference_model_id: Mapped[Uuid] = mapped_column(ForeignKey("inference_model.id"))
    question: Mapped[str] = mapped_column()
    status: Mapped[str] = mapped_column(server_default="")
    answer: Mapped[str] = mapped_column(server_default="", nullable=True)
    law_references: Mapped[JSON] = mapped_column(JSON, nullable=True)
    rating: Mapped[str] = mapped_column(server_default="", nullable=True)
    feedback: Mapped[str] = mapped_column(server_default="", nullable=True)
    user_id: Mapped[Uuid] = mapped_column(ForeignKey("user.id"))

    chat_room: Mapped["ChatRoom"] = relationship(back_populates="chats")

    def __repr__(self) -> str:
        return f"Chat(id={self.id!r}"
